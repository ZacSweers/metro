public abstract interface class dev/zacsweers/metro/compiler/compat/CompatContext {
	public static final field Companion Ldev/zacsweers/metro/compiler/compat/CompatContext$Companion;
	public abstract fun addFakeOverrides (Lorg/jetbrains/kotlin/ir/declarations/IrClass;Lorg/jetbrains/kotlin/ir/types/IrTypeSystemContext;)V
	public abstract fun copy (Lorg/jetbrains/kotlin/fir/declarations/FirDeclarationStatus;Lorg/jetbrains/kotlin/descriptors/Visibility;Lorg/jetbrains/kotlin/descriptors/Modality;ZZZZZZZZZZZZZZZZZZZZ)Lorg/jetbrains/kotlin/fir/declarations/FirDeclarationStatus;
	public static synthetic fun copy$default (Ldev/zacsweers/metro/compiler/compat/CompatContext;Lorg/jetbrains/kotlin/fir/declarations/FirDeclarationStatus;Lorg/jetbrains/kotlin/descriptors/Visibility;Lorg/jetbrains/kotlin/descriptors/Modality;ZZZZZZZZZZZZZZZZZZZZILjava/lang/Object;)Lorg/jetbrains/kotlin/fir/declarations/FirDeclarationStatus;
	public abstract fun createTemporaryVariableDeclarationCompat (Lorg/jetbrains/kotlin/ir/builders/Scope;Lorg/jetbrains/kotlin/ir/types/IrType;Ljava/lang/String;ZLorg/jetbrains/kotlin/ir/declarations/IrDeclarationOrigin;II)Lorg/jetbrains/kotlin/ir/declarations/IrVariable;
	public static synthetic fun createTemporaryVariableDeclarationCompat$default (Ldev/zacsweers/metro/compiler/compat/CompatContext;Lorg/jetbrains/kotlin/ir/builders/Scope;Lorg/jetbrains/kotlin/ir/types/IrType;Ljava/lang/String;ZLorg/jetbrains/kotlin/ir/declarations/IrDeclarationOrigin;IIILjava/lang/Object;)Lorg/jetbrains/kotlin/ir/declarations/IrVariable;
	public abstract fun createTopLevelFunction (Lorg/jetbrains/kotlin/fir/extensions/FirExtension;Lorg/jetbrains/kotlin/GeneratedDeclarationKey;Lorg/jetbrains/kotlin/name/CallableId;Lkotlin/jvm/functions/Function1;Ljava/lang/String;Lkotlin/jvm/functions/Function1;)Lorg/jetbrains/kotlin/fir/declarations/FirSimpleFunction;
	public abstract fun createTopLevelFunction (Lorg/jetbrains/kotlin/fir/extensions/FirExtension;Lorg/jetbrains/kotlin/GeneratedDeclarationKey;Lorg/jetbrains/kotlin/name/CallableId;Lorg/jetbrains/kotlin/fir/types/ConeKotlinType;Ljava/lang/String;Lkotlin/jvm/functions/Function1;)Lorg/jetbrains/kotlin/fir/declarations/FirSimpleFunction;
	public static synthetic fun createTopLevelFunction$default (Ldev/zacsweers/metro/compiler/compat/CompatContext;Lorg/jetbrains/kotlin/fir/extensions/FirExtension;Lorg/jetbrains/kotlin/GeneratedDeclarationKey;Lorg/jetbrains/kotlin/name/CallableId;Lkotlin/jvm/functions/Function1;Ljava/lang/String;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/jetbrains/kotlin/fir/declarations/FirSimpleFunction;
	public static synthetic fun createTopLevelFunction$default (Ldev/zacsweers/metro/compiler/compat/CompatContext;Lorg/jetbrains/kotlin/fir/extensions/FirExtension;Lorg/jetbrains/kotlin/GeneratedDeclarationKey;Lorg/jetbrains/kotlin/name/CallableId;Lorg/jetbrains/kotlin/fir/types/ConeKotlinType;Ljava/lang/String;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/jetbrains/kotlin/fir/declarations/FirSimpleFunction;
	public abstract fun fakeElement (Lorg/jetbrains/kotlin/KtSourceElement;Lorg/jetbrains/kotlin/KtFakeSourceElementKind;II)Lorg/jetbrains/kotlin/KtSourceElement;
	public static synthetic fun fakeElement$default (Ldev/zacsweers/metro/compiler/compat/CompatContext;Lorg/jetbrains/kotlin/KtSourceElement;Lorg/jetbrains/kotlin/KtFakeSourceElementKind;IIILjava/lang/Object;)Lorg/jetbrains/kotlin/KtSourceElement;
	public abstract fun getContainingClassSymbol (Lorg/jetbrains/kotlin/fir/declarations/FirDeclaration;)Lorg/jetbrains/kotlin/fir/symbols/impl/FirClassLikeSymbol;
	public abstract fun getContainingClassSymbol (Lorg/jetbrains/kotlin/fir/symbols/FirBasedSymbol;)Lorg/jetbrains/kotlin/fir/symbols/impl/FirClassLikeSymbol;
	public abstract fun getContainingSymbol (Lorg/jetbrains/kotlin/fir/symbols/impl/FirCallableSymbol;Lorg/jetbrains/kotlin/fir/FirSession;)Lorg/jetbrains/kotlin/fir/symbols/FirBasedSymbol;
}

public final class dev/zacsweers/metro/compiler/compat/CompatContext$Companion {
	public final fun getInstance ()Ldev/zacsweers/metro/compiler/compat/CompatContext;
}

public abstract interface class dev/zacsweers/metro/compiler/compat/CompatContext$Factory {
	public static final field Companion Ldev/zacsweers/metro/compiler/compat/CompatContext$Factory$Companion;
	public abstract fun create ()Ldev/zacsweers/metro/compiler/compat/CompatContext;
	public fun getCurrentVersion ()Ljava/lang/String;
	public abstract fun getMinVersion ()Ljava/lang/String;
}

public final class dev/zacsweers/metro/compiler/compat/CompatContext$Factory$Companion {
}

