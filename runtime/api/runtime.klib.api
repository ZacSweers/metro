// Klib ABI Dump
// Targets: [androidNativeArm32, androidNativeArm64, androidNativeX64, androidNativeX86, iosArm64, iosSimulatorArm64, iosX64, js, linuxArm64, linuxX64, macosArm64, macosX64, mingwX64, tvosArm64, tvosSimulatorArm64, tvosX64, wasmJs, watchosArm32, watchosArm64, watchosDeviceArm64, watchosSimulatorArm64, watchosX64]
// Rendering settings:
// - Signature version: 2
// - Show manifest properties: true
// - Show declarations: true

// Library unique name: <dev.zacsweers.lattice:runtime>
open annotation class <#A: kotlin/Any> dev.zacsweers.lattice/BoundType : kotlin/Annotation { // dev.zacsweers.lattice/BoundType|null[0]
    constructor <init>() // dev.zacsweers.lattice/BoundType.<init>|<init>(){}[0]
}

open annotation class dev.zacsweers.lattice/Assisted : kotlin/Annotation { // dev.zacsweers.lattice/Assisted|null[0]
    constructor <init>(kotlin/String = ...) // dev.zacsweers.lattice/Assisted.<init>|<init>(kotlin.String){}[0]

    final val value // dev.zacsweers.lattice/Assisted.value|{}value[0]
        final fun <get-value>(): kotlin/String // dev.zacsweers.lattice/Assisted.value.<get-value>|<get-value>(){}[0]
}

open annotation class dev.zacsweers.lattice/AssistedFactory : kotlin/Annotation { // dev.zacsweers.lattice/AssistedFactory|null[0]
    constructor <init>() // dev.zacsweers.lattice/AssistedFactory.<init>|<init>(){}[0]
}

open annotation class dev.zacsweers.lattice/Binds : kotlin/Annotation { // dev.zacsweers.lattice/Binds|null[0]
    constructor <init>() // dev.zacsweers.lattice/Binds.<init>|<init>(){}[0]
}

open annotation class dev.zacsweers.lattice/BindsInstance : kotlin/Annotation { // dev.zacsweers.lattice/BindsInstance|null[0]
    constructor <init>() // dev.zacsweers.lattice/BindsInstance.<init>|<init>(){}[0]
}

open annotation class dev.zacsweers.lattice/ClassKey : kotlin/Annotation { // dev.zacsweers.lattice/ClassKey|null[0]
    constructor <init>(kotlin.reflect/KClass<*>) // dev.zacsweers.lattice/ClassKey.<init>|<init>(kotlin.reflect.KClass<*>){}[0]

    final val value // dev.zacsweers.lattice/ClassKey.value|{}value[0]
        final fun <get-value>(): kotlin.reflect/KClass<*> // dev.zacsweers.lattice/ClassKey.value.<get-value>|<get-value>(){}[0]
}

open annotation class dev.zacsweers.lattice/ContributesBinding : kotlin/Annotation { // dev.zacsweers.lattice/ContributesBinding|null[0]
    constructor <init>(kotlin.reflect/KClass<*>, kotlin/Array<kotlin.reflect/KClass<*>> = ..., dev.zacsweers.lattice/BoundType<*> = ...) // dev.zacsweers.lattice/ContributesBinding.<init>|<init>(kotlin.reflect.KClass<*>;kotlin.Array<kotlin.reflect.KClass<*>>;dev.zacsweers.lattice.BoundType<*>){}[0]

    final val boundType // dev.zacsweers.lattice/ContributesBinding.boundType|{}boundType[0]
        final fun <get-boundType>(): dev.zacsweers.lattice/BoundType<*> // dev.zacsweers.lattice/ContributesBinding.boundType.<get-boundType>|<get-boundType>(){}[0]
    final val replaces // dev.zacsweers.lattice/ContributesBinding.replaces|{}replaces[0]
        final fun <get-replaces>(): kotlin/Array<kotlin.reflect/KClass<*>> // dev.zacsweers.lattice/ContributesBinding.replaces.<get-replaces>|<get-replaces>(){}[0]
    final val scope // dev.zacsweers.lattice/ContributesBinding.scope|{}scope[0]
        final fun <get-scope>(): kotlin.reflect/KClass<*> // dev.zacsweers.lattice/ContributesBinding.scope.<get-scope>|<get-scope>(){}[0]
}

open annotation class dev.zacsweers.lattice/ContributesIntoMap : kotlin/Annotation { // dev.zacsweers.lattice/ContributesIntoMap|null[0]
    constructor <init>(kotlin.reflect/KClass<*>, kotlin/Array<kotlin.reflect/KClass<*>> = ..., dev.zacsweers.lattice/BoundType<*> = ...) // dev.zacsweers.lattice/ContributesIntoMap.<init>|<init>(kotlin.reflect.KClass<*>;kotlin.Array<kotlin.reflect.KClass<*>>;dev.zacsweers.lattice.BoundType<*>){}[0]

    final val boundType // dev.zacsweers.lattice/ContributesIntoMap.boundType|{}boundType[0]
        final fun <get-boundType>(): dev.zacsweers.lattice/BoundType<*> // dev.zacsweers.lattice/ContributesIntoMap.boundType.<get-boundType>|<get-boundType>(){}[0]
    final val replaces // dev.zacsweers.lattice/ContributesIntoMap.replaces|{}replaces[0]
        final fun <get-replaces>(): kotlin/Array<kotlin.reflect/KClass<*>> // dev.zacsweers.lattice/ContributesIntoMap.replaces.<get-replaces>|<get-replaces>(){}[0]
    final val scope // dev.zacsweers.lattice/ContributesIntoMap.scope|{}scope[0]
        final fun <get-scope>(): kotlin.reflect/KClass<*> // dev.zacsweers.lattice/ContributesIntoMap.scope.<get-scope>|<get-scope>(){}[0]
}

open annotation class dev.zacsweers.lattice/ContributesIntoSet : kotlin/Annotation { // dev.zacsweers.lattice/ContributesIntoSet|null[0]
    constructor <init>(kotlin.reflect/KClass<*>, kotlin/Array<kotlin.reflect/KClass<*>> = ..., dev.zacsweers.lattice/BoundType<*> = ...) // dev.zacsweers.lattice/ContributesIntoSet.<init>|<init>(kotlin.reflect.KClass<*>;kotlin.Array<kotlin.reflect.KClass<*>>;dev.zacsweers.lattice.BoundType<*>){}[0]

    final val boundType // dev.zacsweers.lattice/ContributesIntoSet.boundType|{}boundType[0]
        final fun <get-boundType>(): dev.zacsweers.lattice/BoundType<*> // dev.zacsweers.lattice/ContributesIntoSet.boundType.<get-boundType>|<get-boundType>(){}[0]
    final val replaces // dev.zacsweers.lattice/ContributesIntoSet.replaces|{}replaces[0]
        final fun <get-replaces>(): kotlin/Array<kotlin.reflect/KClass<*>> // dev.zacsweers.lattice/ContributesIntoSet.replaces.<get-replaces>|<get-replaces>(){}[0]
    final val scope // dev.zacsweers.lattice/ContributesIntoSet.scope|{}scope[0]
        final fun <get-scope>(): kotlin.reflect/KClass<*> // dev.zacsweers.lattice/ContributesIntoSet.scope.<get-scope>|<get-scope>(){}[0]
}

open annotation class dev.zacsweers.lattice/ContributesTo : kotlin/Annotation { // dev.zacsweers.lattice/ContributesTo|null[0]
    constructor <init>(kotlin.reflect/KClass<*>, kotlin/Array<kotlin.reflect/KClass<*>> = ...) // dev.zacsweers.lattice/ContributesTo.<init>|<init>(kotlin.reflect.KClass<*>;kotlin.Array<kotlin.reflect.KClass<*>>){}[0]

    final val replaces // dev.zacsweers.lattice/ContributesTo.replaces|{}replaces[0]
        final fun <get-replaces>(): kotlin/Array<kotlin.reflect/KClass<*>> // dev.zacsweers.lattice/ContributesTo.replaces.<get-replaces>|<get-replaces>(){}[0]
    final val scope // dev.zacsweers.lattice/ContributesTo.scope|{}scope[0]
        final fun <get-scope>(): kotlin.reflect/KClass<*> // dev.zacsweers.lattice/ContributesTo.scope.<get-scope>|<get-scope>(){}[0]
}

open annotation class dev.zacsweers.lattice/DependencyGraph : kotlin/Annotation { // dev.zacsweers.lattice/DependencyGraph|null[0]
    constructor <init>(kotlin.reflect/KClass<*> = ..., kotlin/Array<kotlin.reflect/KClass<*>> = ...) // dev.zacsweers.lattice/DependencyGraph.<init>|<init>(kotlin.reflect.KClass<*>;kotlin.Array<kotlin.reflect.KClass<*>>){}[0]

    final val additionalScopes // dev.zacsweers.lattice/DependencyGraph.additionalScopes|{}additionalScopes[0]
        final fun <get-additionalScopes>(): kotlin/Array<kotlin.reflect/KClass<*>> // dev.zacsweers.lattice/DependencyGraph.additionalScopes.<get-additionalScopes>|<get-additionalScopes>(){}[0]
    final val scope // dev.zacsweers.lattice/DependencyGraph.scope|{}scope[0]
        final fun <get-scope>(): kotlin.reflect/KClass<*> // dev.zacsweers.lattice/DependencyGraph.scope.<get-scope>|<get-scope>(){}[0]

    open annotation class Factory : kotlin/Annotation { // dev.zacsweers.lattice/DependencyGraph.Factory|null[0]
        constructor <init>() // dev.zacsweers.lattice/DependencyGraph.Factory.<init>|<init>(){}[0]
    }
}

open annotation class dev.zacsweers.lattice/ElementsIntoSet : kotlin/Annotation { // dev.zacsweers.lattice/ElementsIntoSet|null[0]
    constructor <init>() // dev.zacsweers.lattice/ElementsIntoSet.<init>|<init>(){}[0]
}

open annotation class dev.zacsweers.lattice/ForScope : kotlin/Annotation { // dev.zacsweers.lattice/ForScope|null[0]
    constructor <init>(kotlin.reflect/KClass<*>) // dev.zacsweers.lattice/ForScope.<init>|<init>(kotlin.reflect.KClass<*>){}[0]

    final val scope // dev.zacsweers.lattice/ForScope.scope|{}scope[0]
        final fun <get-scope>(): kotlin.reflect/KClass<*> // dev.zacsweers.lattice/ForScope.scope.<get-scope>|<get-scope>(){}[0]
}

open annotation class dev.zacsweers.lattice/Inject : kotlin/Annotation { // dev.zacsweers.lattice/Inject|null[0]
    constructor <init>() // dev.zacsweers.lattice/Inject.<init>|<init>(){}[0]
}

open annotation class dev.zacsweers.lattice/IntKey : kotlin/Annotation { // dev.zacsweers.lattice/IntKey|null[0]
    constructor <init>(kotlin/Int) // dev.zacsweers.lattice/IntKey.<init>|<init>(kotlin.Int){}[0]

    final val value // dev.zacsweers.lattice/IntKey.value|{}value[0]
        final fun <get-value>(): kotlin/Int // dev.zacsweers.lattice/IntKey.value.<get-value>|<get-value>(){}[0]
}

open annotation class dev.zacsweers.lattice/IntoMap : kotlin/Annotation { // dev.zacsweers.lattice/IntoMap|null[0]
    constructor <init>() // dev.zacsweers.lattice/IntoMap.<init>|<init>(){}[0]
}

open annotation class dev.zacsweers.lattice/IntoSet : kotlin/Annotation { // dev.zacsweers.lattice/IntoSet|null[0]
    constructor <init>() // dev.zacsweers.lattice/IntoSet.<init>|<init>(){}[0]
}

open annotation class dev.zacsweers.lattice/LazyClassKey : kotlin/Annotation { // dev.zacsweers.lattice/LazyClassKey|null[0]
    constructor <init>(kotlin.reflect/KClass<*>) // dev.zacsweers.lattice/LazyClassKey.<init>|<init>(kotlin.reflect.KClass<*>){}[0]

    final val value // dev.zacsweers.lattice/LazyClassKey.value|{}value[0]
        final fun <get-value>(): kotlin.reflect/KClass<*> // dev.zacsweers.lattice/LazyClassKey.value.<get-value>|<get-value>(){}[0]
}

open annotation class dev.zacsweers.lattice/LongKey : kotlin/Annotation { // dev.zacsweers.lattice/LongKey|null[0]
    constructor <init>(kotlin/Long) // dev.zacsweers.lattice/LongKey.<init>|<init>(kotlin.Long){}[0]

    final val value // dev.zacsweers.lattice/LongKey.value|{}value[0]
        final fun <get-value>(): kotlin/Long // dev.zacsweers.lattice/LongKey.value.<get-value>|<get-value>(){}[0]
}

open annotation class dev.zacsweers.lattice/MapKey : kotlin/Annotation { // dev.zacsweers.lattice/MapKey|null[0]
    constructor <init>(kotlin/Boolean = ...) // dev.zacsweers.lattice/MapKey.<init>|<init>(kotlin.Boolean){}[0]

    final val unwrapValue // dev.zacsweers.lattice/MapKey.unwrapValue|{}unwrapValue[0]
        final fun <get-unwrapValue>(): kotlin/Boolean // dev.zacsweers.lattice/MapKey.unwrapValue.<get-unwrapValue>|<get-unwrapValue>(){}[0]
}

open annotation class dev.zacsweers.lattice/Multibinds : kotlin/Annotation { // dev.zacsweers.lattice/Multibinds|null[0]
    constructor <init>() // dev.zacsweers.lattice/Multibinds.<init>|<init>(){}[0]
}

open annotation class dev.zacsweers.lattice/Named : kotlin/Annotation { // dev.zacsweers.lattice/Named|null[0]
    constructor <init>(kotlin/String) // dev.zacsweers.lattice/Named.<init>|<init>(kotlin.String){}[0]

    final val name // dev.zacsweers.lattice/Named.name|{}name[0]
        final fun <get-name>(): kotlin/String // dev.zacsweers.lattice/Named.name.<get-name>|<get-name>(){}[0]
}

open annotation class dev.zacsweers.lattice/Provides : kotlin/Annotation { // dev.zacsweers.lattice/Provides|null[0]
    constructor <init>() // dev.zacsweers.lattice/Provides.<init>|<init>(){}[0]
}

open annotation class dev.zacsweers.lattice/Qualifier : kotlin/Annotation { // dev.zacsweers.lattice/Qualifier|null[0]
    constructor <init>() // dev.zacsweers.lattice/Qualifier.<init>|<init>(){}[0]
}

open annotation class dev.zacsweers.lattice/Scope : kotlin/Annotation { // dev.zacsweers.lattice/Scope|null[0]
    constructor <init>() // dev.zacsweers.lattice/Scope.<init>|<init>(){}[0]
}

open annotation class dev.zacsweers.lattice/SingleIn : kotlin/Annotation { // dev.zacsweers.lattice/SingleIn|null[0]
    constructor <init>(kotlin.reflect/KClass<*>) // dev.zacsweers.lattice/SingleIn.<init>|<init>(kotlin.reflect.KClass<*>){}[0]

    final val scope // dev.zacsweers.lattice/SingleIn.scope|{}scope[0]
        final fun <get-scope>(): kotlin.reflect/KClass<*> // dev.zacsweers.lattice/SingleIn.scope.<get-scope>|<get-scope>(){}[0]
}

open annotation class dev.zacsweers.lattice/Singleton : kotlin/Annotation { // dev.zacsweers.lattice/Singleton|null[0]
    constructor <init>() // dev.zacsweers.lattice/Singleton.<init>|<init>(){}[0]
}

open annotation class dev.zacsweers.lattice/StringKey : kotlin/Annotation { // dev.zacsweers.lattice/StringKey|null[0]
    constructor <init>(kotlin/String) // dev.zacsweers.lattice/StringKey.<init>|<init>(kotlin.String){}[0]

    final val value // dev.zacsweers.lattice/StringKey.value|{}value[0]
        final fun <get-value>(): kotlin/String // dev.zacsweers.lattice/StringKey.value.<get-value>|<get-value>(){}[0]
}

abstract fun interface <#A: kotlin/Any> dev.zacsweers.lattice/Provider { // dev.zacsweers.lattice/Provider|null[0]
    abstract fun invoke(): #A // dev.zacsweers.lattice/Provider.invoke|invoke(){}[0]
}

abstract interface <#A: kotlin/Any> dev.zacsweers.lattice/MembersInjector { // dev.zacsweers.lattice/MembersInjector|null[0]
    abstract fun injectMembers(#A) // dev.zacsweers.lattice/MembersInjector.injectMembers|injectMembers(1:0){}[0]
}

abstract class dev.zacsweers.lattice/AppScope // dev.zacsweers.lattice/AppScope|null[0]

final fun <#A: kotlin/Any> dev.zacsweers.lattice/providerOf(#A): dev.zacsweers.lattice/Provider<#A> // dev.zacsweers.lattice/providerOf|providerOf(0:0){0§<kotlin.Any>}[0]
final inline fun <#A: kotlin/Any> dev.zacsweers.lattice/provider(crossinline kotlin/Function0<#A>): dev.zacsweers.lattice/Provider<#A> // dev.zacsweers.lattice/provider|provider(kotlin.Function0<0:0>){0§<kotlin.Any>}[0]
final inline fun <#A: reified kotlin/Any> dev.zacsweers.lattice/createGraph(): #A // dev.zacsweers.lattice/createGraph|createGraph(){0§<kotlin.Any>}[0]
final inline fun <#A: reified kotlin/Any> dev.zacsweers.lattice/createGraphFactory(): #A // dev.zacsweers.lattice/createGraphFactory|createGraphFactory(){0§<kotlin.Any>}[0]
